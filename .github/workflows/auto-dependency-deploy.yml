name: Weekly Dependency Update and Deploy

on:
  schedule:
    # Runs every Monday at 05:00 UTC
    - cron: '0 5 * * 1'
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write # Needed for commit/push of package-lock & gh-pages deploy

jobs:
  update-and-deploy:
    name: Update Dependencies & Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for gh-pages

      - name: Read .nvmrc
        id: node_version
        run: echo "NODE_VERSION=$(cat .nvmrc | xargs)" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.node_version.outputs.NODE_VERSION }}
          cache: 'npm'

      - name: Configure Git User
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Install Dependencies (Clean Install)
        run: npm ci

      - name: Check for Outdated Dependencies (Informational)
        run: npm outdated || true

      - name: Update Dependencies
        run: npm update

      - name: Check for file changes
        id: check_changes
        run: |
          if git status --porcelain package-lock.json package.json | grep -qE '^\s?[AM]'; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "Detected changes in package files."
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            echo "No dependency changes detected."
          fi

      - name: Build Project
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: npm run build

#      - name: Run Tests (Optional but Recommended)
#        if: steps.check_changes.outputs.changes_detected == 'true'
#        run: npm test

      - name: Commit Dependency Updates
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          git add package.json package-lock.json
          if ! git diff --staged --quiet; then
            git commit -m "chore(deps): automatically update npm dependencies"
            echo "Changes committed."
          else
            echo "No staged changes to commit."
            echo "changes_detected=false" >> $GITHUB_OUTPUT # Override if commit failed
          fi

      - name: Push Changes to Main Branch
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          echo "Pushing changes to main branch..."
          git push origin main

      - name: Deploy to GitHub Pages
        # Deploy ONLY if dependency changes were detected, built, and (presumably) pushed
        if: steps.check_changes.outputs.changes_detected == 'true' # <<<--- UNCOMMENTED
        run: |
          echo "Deploying build directory to gh-pages branch..."
          if [ ! -d "build" ]; then
            echo "Error: 'build' directory not found. Build might have failed or been skipped."
            exit 1
          fi
          # Use npx to run the locally installed gh-pages with authentication
          # The GITHUB_TOKEN is automatically available in Actions
          # The GITHUB_REPOSITORY is also automatically available (e.g., YourUsername/learnWithT)
          npx gh-pages \
            -d build \
            -r https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git \
            -u "GitHub Actions Bot <actions@github.com>" \
            -m "Deploy: ${{ github.event_name }} triggered by ${{ github.actor }} - ${{ github.sha }}"
          echo "Deployment command executed."

      - name: No Changes Detected - Workflow Complete
        if: steps.check_changes.outputs.changes_detected == 'false'
        run: echo "No dependency updates found or committed. Skipping build, commit, push, and deploy."
