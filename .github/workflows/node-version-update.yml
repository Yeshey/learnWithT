name: Check & Propose Node.js LTS Update

on:
  schedule:
    # Runs on the 1st of every month at 06:00 UTC
    - cron: '0 6 1 * *'
  workflow_dispatch: # Allows manual triggering

# Keep minimal permissions
permissions:
  contents: write
  pull-requests: write

jobs:
  propose-node-update:
    runs-on: ubuntu-latest
    outputs:
      latest_lts_major: ${{ steps.get_versions.outputs.latest_lts_major }}
      needs_update: ${{ steps.get_versions.outputs.needs_update }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Latest LTS and Current Configured Node Version
        id: get_versions
        run: |
          echo "Fetching latest Node.js LTS version..."
          LATEST_LTS_VERSION=$(curl -s https://nodejs.org/dist/index.json | jq -r '[.[] | select(.lts != false)] | sort_by(.date) | reverse | .[0].version')
          LATEST_LTS_MAJOR=$(echo $LATEST_LTS_VERSION | sed 's/v\([0-9]*\).*/\1/')
          echo "Latest LTS Major: ${LATEST_LTS_MAJOR}"

          echo "Finding current Node version configured in primary workflow..."
          # IMPORTANT: Verify this path points to your MAIN workflow that defines the Node version
          PRIMARY_WORKFLOW_FILE=".github/workflows/auto-dependency-deploy.yml"
          if [[ ! -f "$PRIMARY_WORKFLOW_FILE" ]]; then
             echo "Error: Primary workflow file not found at $PRIMARY_WORKFLOW_FILE"
             # Optional: Search for other workflow files or fail gracefully
             # Example: Try finding any file with node-version
             PRIMARY_WORKFLOW_FILE=$(grep -l -m 1 'node-version:' .github/workflows/*.yml | head -n 1)
             if [[ -z "$PRIMARY_WORKFLOW_FILE" ]]; then
                echo "Error: Could not find any workflow file defining node-version."
                exit 1
             fi
             echo "Warning: Using fallback workflow file: $PRIMARY_WORKFLOW_FILE"
          fi

          CURRENT_NODE_LINE=$(grep -m 1 'node-version:' "$PRIMARY_WORKFLOW_FILE")
          CURRENT_MAJOR=$(echo "$CURRENT_NODE_LINE" | sed -n 's/.*node-version:[^0-9]*\([0-9]\+\).*/\1/p')

          if [[ -z "$CURRENT_MAJOR" ]]; then
            echo "Error: Could not find current major Node version in $PRIMARY_WORKFLOW_FILE"
            exit 1
          fi
          echo "Current Configured Major: ${CURRENT_MAJOR}"

          echo "latest_lts_major=${LATEST_LTS_MAJOR}" >> $GITHUB_OUTPUT
          echo "current_major=${CURRENT_MAJOR}" >> $GITHUB_OUTPUT

          if [[ "$LATEST_LTS_MAJOR" -gt "$CURRENT_MAJOR" ]]; then
            echo "Update needed."
            echo "needs_update=true" >> $GITHUB_OUTPUT
          else
            echo "No Node.js major version update needed."
            echo "needs_update=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Update node-version in ALL Workflow Files
        if: steps.get_versions.outputs.needs_update == 'true'
        run: |
          echo "Updating node-version to ${{ steps.get_versions.outputs.latest_lts_major }} in .github/workflows/*.yml"
          find .github/workflows -name '*.yml' -exec sed -i -E "s/(node-version:[[:space:]]*['\"]?)[0-9]+([\.\w]*['\"]?)/\1${{ steps.get_versions.outputs.latest_lts_major }}\2/" {} \;
          echo "--- Files Modified ---"
          # Use git diff to show changes clearly
          git diff -- .github/workflows/
          echo "---------------------"
        shell: bash # Ensure shell is bash for find/sed

      - name: Create Pull Request for Node.js Update (Without Workflow Changes)
        if: steps.get_versions.outputs.needs_update == 'true'
        run: |
          # Create a message file for the PR
          cat > pr_message.md << EOL
          # Node.js LTS Update Needed

          Automated Node.js version update detected for workflows.

          Proposing update to node-version for latest LTS: **v${{ steps.get_versions.outputs.latest_lts_major }}**.

          **Manual Action Required Before Merging:**
          * Manually update workflow files to use Node.js v${{ steps.get_versions.outputs.latest_lts_major }}
          * Manually update \`flake.nix\` (e.g., \`pkgs.nodejs_XX\`) to use Node.js v${{ steps.get_versions.outputs.latest_lts_major }}
          * Update other project files (\`.nvmrc\`, \`package.json engines\`) if needed
          * Test thoroughly after updating all locations
          EOL

          # Create a separate branch for the PR, but don't include workflow file changes
          git checkout -b node-update-needed-v${{ steps.get_versions.outputs.latest_lts_major }}
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Create a marker file to indicate the needed update
          echo "Update to Node.js v${{ steps.get_versions.outputs.latest_lts_major }} needed" > NODE_UPDATE_NEEDED.md
          git add NODE_UPDATE_NEEDED.md
          git commit -m "chore: indicate Node.js v${{ steps.get_versions.outputs.latest_lts_major }} update needed"
          git push -f origin node-update-needed-v${{ steps.get_versions.outputs.latest_lts_major }}
          
          # Use GitHub CLI to create the PR if installed
          if command -v gh &> /dev/null; then
            gh pr create --base main --head node-update-needed-v${{ steps.get_versions.outputs.latest_lts_major }} \
              --title "chore(ci): Node.js LTS v${{ steps.get_versions.outputs.latest_lts_major }} update needed" \
              --body-file pr_message.md \
              --label "dependencies,ci,needs-manual-action"
          else
            echo "GitHub CLI not installed. Please create PR manually from branch node-update-needed-v${{ steps.get_versions.outputs.latest_lts_major }}"
          fi
        shell: bash
